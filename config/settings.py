"""
Django settings for config project.

Generated by 'django-admin startproject' using Django 5.2.7.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

from pathlib import Path

from decimal import Decimal
from pathlib import Path
import datetime
import os
import environ
from django.contrib.messages import constants as messages
from django.urls import reverse_lazy

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

env = environ.Env(
    # Définissez ici les types et les valeurs par défaut de vos variables
    DEBUG=(bool, False)
)

# Lecture du fichier .env
environ.Env.read_env(os.path.join(BASE_DIR, '.env'))

# Lecture du fichier .env
environ.Env.read_env(os.path.join(BASE_DIR, '.env'))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = env('SECRET_KEY')

# SECURITY WARNING: don't run with debug turned on in production!

DEBUG = env('DEBUG')

ALLOWED_HOSTS = ['127.0.0.1', 'localhost']
SITE_URL = 'http://127.0.0.1:8000'

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.humanize',
    'django_filters',
    'django_ckeditor_5',
    'imagekit',
    'accounts',
    # Gestion de django-allauth
    'django.contrib.sites',
    'allauth',
    'allauth.account',
    'allauth.socialaccount',
    # Allauth providers "Google"
    'allauth.socialaccount.providers.google',
    # Gestion de django-axes
    'axes',
    'mptt',
    'store',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    # Gestion de django-axes
    'axes.middleware.AxesMiddleware',
    # Gestion de django allauth
    'allauth.account.middleware.AccountMiddleware',
]

ROOT_URLCONF = 'config.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                # Gestion des context_processors personaliser
                'store.context_processors.global_context',
            ],
        },
    },
]

WSGI_APPLICATION = 'config.wsgi.application'

# Taille maximale des fichiers uploadés (en bytes) P
DATA_UPLOAD_MAX_MEMORY_SIZE = 104857600  # 100 Mo
FILE_UPLOAD_MAX_MEMORY_SIZE = 104857600  # 100 Mo



# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

# --- Configuration de la base de données ---

DATABASES = {
    'default': {
        'ENGINE': env('DB_ENGINE'),
        'NAME': env('DB_NAME'),
        'USER': env('DB_USER'),
        'PASSWORD': env('DB_PASSWORD'),
        'HOST': env('DB_HOST'),
        'PORT': env('DB_PORT'),
    }

}
# --- Fin de la configuration ---

# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'fr-FR'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = '/static/'
STATICFILES_DIRS = [BASE_DIR / 'static']

# Collection des donners static
STATIC_ROOT = BASE_DIR / 'staticfiles'

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field
DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
AUTH_USER_MODEL = "accounts.User"
MEDIA_URL = "/media/"
MEDIA_ROOT = BASE_DIR / "media"


# Gestion d'url de retour par @login_required
LOGIN_URL = reverse_lazy("connexion")



# ................................................. #
  # Debut de la configuration d'envoies des e-mails
# ................................................. #

# Chemin de base du projet
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

# Initialisation de django-environ
env = environ.Env()
env.read_env(os.path.join(BASE_DIR, ".env"))

# Emails
EMAIL_BACKEND = env("EMAIL_BACKEND")
EMAIL_HOST = env("EMAIL_HOST", default="smtp.gmail.com")
EMAIL_PORT = env.int("EMAIL_PORT", default=587)
EMAIL_USE_TLS = env.bool("EMAIL_USE_TLS", default=True)
EMAIL_HOST_USER = env("EMAIL_HOST_USER")
EMAIL_HOST_PASSWORD = env("EMAIL_HOST_PASSWORD")
DEFAULT_FROM_EMAIL = env("DEFAULT_FROM_EMAIL")

# Gestion des messages d'alerte
MESSAGE_TAGS = {
    messages.DEBUG: 'debug',
    messages.INFO: 'info',
    messages.WARNING: 'warning',
    messages.SUCCESS: 'success',
    messages.ERROR: 'error',
}

# ................................................. #
  # Fin de la configuration d'envoies des e-mails
# ................................................. #




# ................................................. #
  # Debut de la configuration de django axes
# ................................................. #

# Gestion de django-axes
AXES_FAILURE_LIMIT = 3
AXES_LOCKOUT_PARAMETERS = ['username', 'ip_address']
AXES_COOLOFF_TIME = datetime.timedelta(minutes=10)

# ................................................. #
  # Fin de la configuration de django axes
# ................................................. #



# ................................................. #
  # Debut de l'authentication backends
# ................................................. #

AUTHENTICATION_BACKENDS = [
    # Gestion de connexion par mail/username/reseau sauciaux
    'accounts.backends.EmailOrUsernameBackend',
    # Backend par defaut
    'django.contrib.auth.backends.ModelBackend',
    # Backend spécifique à django-axes
    'axes.backends.AxesStandaloneBackend',
    # Backend spécifique à allauth
    'allauth.account.auth_backends.AuthenticationBackend',
]

# ................................................. #
  # Fin de l'authentification backends
# ................................................. #



# ................................................. #
  # Debut de la configuration de django-allauth
# ................................................. #

# Redirection direct vers la page google
# Sans passer par login de allauth
SOCIALACCOUNT_LOGIN_ON_GET = True  # IMPORTANT : Redirection directe
SOCIALACCOUNT_STORE_TOKENS = True
SOCIALACCOUNT_AUTO_SIGNUP = True

# Redirection après la connexion et la deconnexion
LOGOUT_REDIRECT_URL = '/'
LOGIN_REDIRECT_URL = '/'
SOCIALACCOUNT_LOGIN_REDIRECT_URL = '/'

# Configurations optionnelles d'allauth pour améliorer l'expérience
ACCOUNT_LOGIN_METHODS = {"username", "email"}
ACCOUNT_SIGNUP_FIELDS = ["email*", "password1*", "password2*"]

# Identification du site
SITE_ID = 1

# ................................................. #
  # Fin de la configuration de django-allauth
# ................................................. #




# GESTION DES TAXTS (TVA) - NON APPLICABLE POUR LE MOMENT
TAX_RATE = Decimal("0.05")



# ................................................. #
   # Securiter supplementaire requis en production
# ................................................. #

# Gestion de niveau de securiter à revoir en production
SESSION_COOKIE_SECURE = False     # cookies uniquement en HTTPS
CSRF_COOKIE_SECURE = False
SECURE_BROWSER_XSS_FILTER = True
SECURE_CONTENT_TYPE_NOSNIFF = True
SECURE_HSTS_SECONDS = 0    # HSTS pour forcer HTTPS 31536000
# SECURE_SSL_REDIRECT = False        # redirige HTTP vers HTTPS

# ................................................. #
 # Fin Securiter supplementaire requis en production
# ................................................. #


# ................................................. #
  # Debut de la configuration de Cinetpay
# ................................................. #

# CinetPay Configuration
CINETPAY_API_KEY = env("CINETPAY_API_KEY")
CINETPAY_SITE_ID = env("CINETPAY_SITE_ID")
CINETPAY_SECRET_KEY = env("CINETPAY_SECRET_KEY")

# ................................................. #
  # Fin de la configuration de Cinetpay
# ................................................. #
